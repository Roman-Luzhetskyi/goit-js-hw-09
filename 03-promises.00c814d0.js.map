{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAO,C,SAAEL,E,MAAUC,GAEzB,OAAO,IAAIK,SAAS,CAACC,EAASC,KAC5BC,YAAW,KACLP,EACFK,EAAQF,GAERG,EAAOH,EAAK,GAEbJ,EAAM,G,CAlCAS,SAASC,cAAc,SAqB/BC,iBAAiB,UAnBGC,IACvBA,EAAEC,iBAEF,MAAMC,EAAeF,EAAEG,cAAcC,SAC/BC,EAAQC,SAASJ,EAAad,MAAMmB,OACpCC,EAAOF,SAASJ,EAAaM,KAAKD,OAClCE,EAASH,SAASJ,EAAaO,OAAOF,OAE5C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDxB,EAAcwB,EAAUL,EAASG,GAAQE,EAAW,IACjDC,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEzE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,GACrE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix'\n\nconst form = document.querySelector('.form');\n\nconst onSubmitPromise = (e) => {\n  e.preventDefault();\n\n  const formElements = e.currentTarget.elements;\n  const delay = parseInt(formElements.delay.value);\n  const step = parseInt(formElements.step.value);\n  const amount = parseInt(formElements.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay + (step * (position - 1)))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\n\nform.addEventListener('submit', onSubmitPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const data = { position, delay };\n \n  return new Promise ((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(data);\n      } else {\n        reject(data);\n      }\n    }, delay);\n  });\n}\n////////////////////////////////////////////////////////////////////////\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","data","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","delay1","parseInt","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.00c814d0.js.map"}